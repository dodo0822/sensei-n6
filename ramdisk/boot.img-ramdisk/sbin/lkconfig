#!/system/bin/sh

detectsu=`ls /data/data`
[ -z "$detectsu" ] && echo "Must be superuser!" && exit

while true; do

echo
echo "leanKernel configurator"
echo "---"
echo "0) display current settings"

echo "1) set mmc crc"
echo "2) set cpu boost"
echo "3) set charging LED"
echo "4) set rgb control (advanced)"
echo "5) set rgb control (simple)"
echo
echo "9) check top 10 wake locks (ie. wakeup sources)"
echo
echo -n "please enter a number (or press enter to exit): "

read option

case $option in
0)
	echo
	echo "current settings"
	echo "----------------"
	echo -n "1) mmc crc: "
	cat /sys/module/mmc_core/parameters/use_spi_crc
	echo -n "2) cpu boost: "
	cat /sys/module/cpu_boost/parameters/cpuboost_enable
	echo -n "3) charging led: "
	value=`cat /sys/class/leds/charging/trigger`
 	case "$value" in
		*"[battery-charging]"*) echo "Enabled" ;;
		*) echo "Disabled" ;;
	esac
	echo -n "4) rgb control (red greed blue): "
	cat /sys/devices/platform/kcal_ctrl.0/kcal
	echo
	;;
1)
	echo -n "Enter Y to enable, N to disable mmc crc: "
	read value
	echo $value > /data/data/leankernel/use_spi_crc
	echo $value > /sys/module/mmc_core/parameters/use_spi_crc
	echo "Done! (also will persist at boot)"
	;;
2)
        echo -n "Enter Y to enable, N to disable cpu boost: "
        read value
        echo $value > /data/data/leankernel/cpuboost_enable
        echo $value > /sys/module/cpu_boost/parameters/cpuboost_enable
        echo "Done! (also will persist at boot)"
	;;
3)
        echo -n "Enter Y to enable, N to disable charging led: "
        read value
	if [ "$value" == "Y" ] || [ "$value" == "y" ]; then 
        	echo battery-charging > /data/data/leankernel/charging_led
		echo battery-charging > /sys/class/leds/charging/trigger
		echo 4 > /sys/class/leds/charging/brightness
	else
        	rm -f /data/data/leankernel/charging_led
		echo none > /sys/class/leds/charging/trigger
	fi
        echo "Done! (also will persist at boot)"
	;;
4)
        echo -n "Enter three values (red, green, blue) between 0-255 (default is 255 255 255):"
        read value
	if [ -n "$value" ]; then
		echo "$value" > /data/data/leankernel/kcal
		echo "$value" > /sys/devices/platform/kcal_ctrl.0/kcal
		echo 1 > /sys/devices/platform/kcal_ctrl.0/kcal_ctrl
		echo "Done! (also will persist at boot)"
	fi
	;;
5)
        echo -n "Enter 1 for reference(6500k), 2 for cool(7400k), 3 for stock(6250k):"
        read value
	case $value in
	  1) RGB="248 246 255";;
	  2) RGB="237 235 255";;
	  *) RGB="255 255 255";;
	esac
	echo "$RGB" > /data/data/leankernel/kcal
	echo "$RGB" > /sys/devices/platform/kcal_ctrl.0/kcal
	echo 1 > /sys/devices/platform/kcal_ctrl.0/kcal_ctrl
	echo "Done! (also will persist at boot)"
	;;
9)
	echo
	if [ -a /system/xbin/awk ]; then
		echo "1st column: # of times wakeup source could have aborted sleep."
		echo "2nd column: # of times the source actually prevented sleep."
		echo "-----"
		cat /sys/kernel/debug/wakeup_sources | grep -v wakeup_count | awk '{ printf "%-8s%-6s %s\n",$4,$10,$1 }' | sort -rn | head -10
	else
		echo "busybox required!"
	fi
	;;
*)
	exit
	;;
esac
echo
done
